{"version":3,"file":"static/js/47.526d423d.chunk.js","mappings":"qOACA,EAAwB,gCAAxB,EAA+D,+BAA/D,EAAsG,gCAAtG,EAA8I,gCAA9I,EAAuL,iCAAvL,EAAgO,gC,SCKjN,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfN,GACEO,EAAAA,EAAAA,IAAS,CACPC,KAAMH,EAAKI,SAASD,KAAKE,MACzBC,MAAON,EAAKI,SAASE,MAAMD,MAC3BE,SAAUP,EAAKI,SAASG,SAASF,SAGrCL,EAAKQ,OACN,EAED,OACE,4BACE,eAAIC,UAAWC,EAAf,2BAEA,SAAC,KAAD,CACEC,cAAe,CAAER,KAAM,GAAIG,MAAO,GAAIC,SAAU,IAChDK,SAAUf,EACVgB,iBAAkBC,EAAAA,GAHpB,SAKG,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,aAAcC,EAAzB,EAAyBA,aAAzB,OACC,UAAC,KAAD,CAAMR,UAAWC,EAAUE,SAAUf,EAArC,WACE,mBAAOY,UAAWC,EAAlB,kBAEE,kBACED,UAAWC,EACXQ,KAAK,OACLf,KAAK,OACLE,MAAOU,EAAOZ,KACdgB,SAAUH,KAEZ,SAAC,KAAD,CAAcP,UAAWC,EAAWP,KAAK,OAAOiB,UAAU,YAG5D,mBAAOX,UAAWC,EAAlB,mBAEE,kBACED,UAAWC,EACXQ,KAAK,QACLf,KAAK,QACLE,MAAOU,EAAOT,MACda,SAAUH,KAEZ,SAAC,KAAD,CACEP,UAAWC,EACXP,KAAK,QACLiB,UAAU,YAId,mBAAOX,UAAWC,EAAlB,sBAEE,kBACED,UAAWC,EACXQ,KAAK,WACLf,KAAK,WACLE,MAAOU,EAAOR,SACdY,SAAUH,KAEZ,SAAC,KAAD,CACEP,UAAWC,EACXP,KAAK,WACLiB,UAAU,YAId,mBAAQX,UAAWC,EAAYQ,KAAK,SAApC,SACGD,EAAe,MAAQ,mBA/C7B,MAsDR,CC3ED,MARA,WACE,OACE,0BACE,SAACvB,EAAD,KAGL,C,sHCNY2B,EAAgBC,EAAAA,GAAW,CACtCnB,KAAMmB,EAAAA,KAAaC,WAAWC,IAAI,GAAGC,IAAI,IACzCC,OAAQJ,EAAAA,KAAaC,aAGVI,EAAkBL,EAAAA,GAAW,CACxChB,MAAOgB,EAAAA,KAAaC,WAAWjB,QAC/BC,SAAUe,EAAAA,KAAaC,WAAWC,IAAI,GAAGC,IAAI,MAGlCX,EAAqBQ,EAAAA,GAAW,CAC3CnB,KAAMmB,EAAAA,KAAaC,WAAWC,IAAI,GAAGC,IAAI,IACzCnB,MAAOgB,EAAAA,KAAaC,WAAWjB,QAC/BC,SAAUe,EAAAA,KAAaC,WAAWC,IAAI,GAAGC,IAAI,K","sources":["webpack://goit-react-hw-08-phonebook/./src/components/RegistrationForm/RegistrationForm.module.css?5637","components/RegistrationForm/RegistrationForm.js","pages/RegisterPage.js","utilits/validationSchema.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"RegistrationForm_title__iQGD+\",\"form\":\"RegistrationForm_form__c8X43\",\"label\":\"RegistrationForm_label__zrkEU\",\"input\":\"RegistrationForm_input__EgGQR\",\"button\":\"RegistrationForm_button__XU1LB\",\"error\":\"RegistrationForm_error__hvKUg\"};","import { useDispatch } from 'react-redux';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport { userRegisterSchema } from 'utilits/validationSchema';\nimport { register } from 'redux/auth/auth-operations';\nimport css from './RegistrationForm.module.css';\n\nexport default function RegistrationForm() {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      }),\n    );\n    form.reset();\n  };\n\n  return (\n    <div>\n      <h2 className={css.title}>Registration</h2>\n\n      <Formik\n        initialValues={{ name: '', email: '', password: '' }}\n        onSubmit={handleSubmit}\n        validationSchema={userRegisterSchema}\n      >\n        {({ values, handleChange, isSubmitting }) => (\n          <Form className={css.form} onSubmit={handleSubmit}>\n            <label className={css.label}>\n              Name\n              <input\n                className={css.input}\n                type=\"text\"\n                name=\"name\"\n                value={values.name}\n                onChange={handleChange}\n              />\n              <ErrorMessage className={css.error} name=\"name\" component=\"div\" />\n            </label>\n\n            <label className={css.label}>\n              Email\n              <input\n                className={css.input}\n                type=\"email\"\n                name=\"email\"\n                value={values.email}\n                onChange={handleChange}\n              />\n              <ErrorMessage\n                className={css.error}\n                name=\"email\"\n                component=\"div\"\n              />\n            </label>\n\n            <label className={css.label}>\n              Password\n              <input\n                className={css.input}\n                type=\"password\"\n                name=\"password\"\n                value={values.password}\n                onChange={handleChange}\n              />\n              <ErrorMessage\n                className={css.error}\n                name=\"password\"\n                component=\"div\"\n              />\n            </label>\n\n            <button className={css.button} type=\"submit\">\n              {isSubmitting ? '...' : 'Registration'}\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n}\n","import RegistrationForm from 'components/RegistrationForm';\n\nfunction RegisterPage() {\n  return (\n    <div>\n      <RegistrationForm />\n    </div>\n  );\n}\n\nexport default RegisterPage;\n","import * as yup from 'yup';\n\nexport const contactSchema = yup.object({\n  name: yup.string().required().min(3).max(30),\n  number: yup.number().required(),\n});\n\nexport const userLoginSchema = yup.object({\n  email: yup.string().required().email(),\n  password: yup.string().required().min(4).max(14),\n});\n\nexport const userRegisterSchema = yup.object({\n  name: yup.string().required().min(3).max(30),\n  email: yup.string().required().email(),\n  password: yup.string().required().min(7).max(14),\n});\n"],"names":["RegistrationForm","dispatch","useDispatch","handleSubmit","e","preventDefault","form","currentTarget","register","name","elements","value","email","password","reset","className","css","initialValues","onSubmit","validationSchema","userRegisterSchema","values","handleChange","isSubmitting","type","onChange","component","contactSchema","yup","required","min","max","number","userLoginSchema"],"sourceRoot":""}