{"version":3,"file":"static/js/435.e3165b8c.chunk.js","mappings":"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","sources":["redux/contacts/contacts-selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.jsx","webpack://goit-react-hw-08-phonebook/./src/components/AddContact/AddContact.module.css?e55c","components/AddContact/AddContact.js","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","hooks/useShowModal.js","components/Contact/Contact.jsx","pages/ContactsPage.js","utilits/validationSchema.js"],"sourcesContent":["export const getFilter = state => state.filter;\n\nexport const getContacts = state => state.contacts;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactItem\":\"ContactList_contactItem__ppNQ5\",\"delIcon\":\"ContactList_delIcon__ZhlTn\",\"contactLogo\":\"ContactList_contactLogo__J70QY\",\"contactName\":\"ContactList_contactName__wLcl6\",\"contactPhone\":\"ContactList_contactPhone__b7MFx\"};","import { FaTrash, FaUserAlt } from 'react-icons/fa';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport { deleteContact } from 'redux/contacts/contacts-operation';\nimport { getContacts, getFilter } from 'redux/contacts/contacts-selectors';\nimport css from './ContactList.module.css';\n\nconst ContactList = () => {\n  const { items } = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const filtredContacts = () => {\n    if (!filter) {\n      return items;\n    }\n\n    const normalizedFilter = filter.toLowerCase();\n    return (\n      items &&\n      items.filter(contact =>\n        contact.name.toLowerCase().includes(normalizedFilter)  || contact.number.includes(normalizedFilter) ,\n      )\n    );\n  };\n\n  const filteredContactList = filtredContacts();\n\n  return (\n    <>\n      {\n        <ul className={css.contactList}>\n          {filteredContactList.map(({ id, name, number }) => (\n            <li key={nanoid()} className={css.contactItem}>\n              <FaUserAlt className={css.contactLogo} />\n              <p className={css.contactName}>{name}</p>\n              <p className={css.contactPhone}>{number}</p>\n              <FaTrash\n                className={css.delIcon}\n                onClick={() => dispatch(deleteContact(id))}\n              ></FaTrash>\n            </li>\n          ))}\n        </ul>\n      }\n      {items.length === 0 && (\n        <div className={css.empty}>\n          <p className={css.emptyText}>Contact List is empty...</p>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\",\"error\":\"ContactForm_error__C1smZ\"};","import { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/contacts-operation';\nimport { getContacts } from 'redux/contacts/contacts-selectors';\nimport css from './ContactForm.module.css';\nimport PropTypes from 'prop-types';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { Report } from 'notiflix/build/notiflix-report-aio';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { contactSchema } from 'utilits/validationSchema';\n\nexport default function ContactForm({ onClose }) {\n  const { items } = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const name = e.currentTarget.elements.name.value;\n    const number = e.currentTarget.elements.number.value;\n\n    const newContact = items.some(contact => {\n      return contact.name === name && contact.number === number;\n    });\n    if (!newContact) {\n      dispatch(addContact({ name, number }));\n      Notify.success(`The ${name} has been added to your contact list.`);\n      onClose();\n    } else {\n      Report.warning(\n        `${name}`,\n        `with the number ${number} already in the contact list.`,\n        'Close',\n      );\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      onSubmit={handleSubmit}\n      validationSchema={contactSchema}\n    >\n      {({ values, handleChange }) => (\n        <Form className={css.form} onSubmit={handleSubmit}>\n          <label className={css.label}>\n            <span className={css.title}>Name</span>\n            <Field\n              className={css.input}\n              type=\"text\"\n              name=\"name\"\n              onChange={handleChange}\n              value={values.name}\n            />\n            <ErrorMessage className={css.error} name=\"name\" component=\"div\" />\n          </label>\n          <label className={css.label}>\n            <span className={css.title}>Number</span>\n            <Field\n              className={css.input}\n              type=\"tel\"\n              name=\"number\"\n              onChange={handleChange}\n              value={values.number}\n            />\n            <ErrorMessage className={css.error} name=\"number\" component=\"div\" />\n          </label>\n          <button className={css.button} type=\"submit\">\n            Add\n          </button>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nContactForm.propTypes = {\n  onClose: PropTypes.func,\n  validationSchema: PropTypes.shape({\n    name: PropTypes.func,\n    number: PropTypes.func,\n  }),\n  onSubmit: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"modalBackdrop\":\"Modal_modalBackdrop__Lq6oj\",\"modalContent\":\"Modal_modalContent__axM59\",\"buttonClose\":\"Modal_buttonClose__5LpkD\",\"svg\":\"Modal_svg__Kt273\"};","import React, { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport css from './Modal.module.css';\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal({ children, onClose }) {\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [onClose]);\n\n  const handleBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div className={css.modalBackdrop} onClick={handleBackdropClick}>\n      <div className={css.modalContent}>\n        {children}\n        <button className={css.buttonClose} type=\"button\" onClick={onClose}>\n          <AiOutlineCloseCircle className={css.svg} />\n        </button>\n      </div>\n    </div>,\n    modalRoot,\n  );\n}\n\nModal.propTypes = {\n  children: PropTypes.element,\n  onClose: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"headerBtn\":\"AddContact_headerBtn__Ok-Ic\"};","import { useState } from 'react';\nimport { BsFillPersonPlusFill } from 'react-icons/bs';\nimport Modal from 'components/Modal';\nimport ContactForm from 'components/ContactForm';\nimport css from './AddContact.module.css';\n\n\nexport const Addcontact = () => {\n  const [showModal, setShowModal] = useState(false);\n\n  const toggleModal = () => setShowModal(prevShowModal => !prevShowModal);\n\n  return (\n    <div>\n      <button className={css.headerBtn} type=\"button\" onClick={toggleModal}>\n        <p>Add new contact</p>\n        <BsFillPersonPlusFill size={20} />\n      </button>\n\n      {showModal && (\n        <Modal onClose={toggleModal}>\n          <ContactForm onClose={toggleModal} />\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default Addcontact;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Filter_wrapper__9Ksqy\",\"filterTitle\":\"Filter_filterTitle__5SDqd\",\"filterText\":\"Filter_filterText__QGy-k\"};","import { useDispatch, useSelector } from 'react-redux';\nimport css from './Filter.module.css';\nimport { getFilter } from 'redux/contacts/contacts-selectors';\nimport { changeFilter } from 'redux/contacts/filter-slice';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const changeFieldFilter = e => {\n    dispatch(changeFilter(e.target.value));\n  };\n\n  return (\n    <div className={css.wrapper}>\n      <label className={css.filterLabel}>\n        <p className={css.filterTitle}>Find contacts by name or number</p>\n        <input\n          type=\"text\"\n          className={css.filterText}\n          onChange={changeFieldFilter}\n          value={filter}\n        />\n      </label>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"loaderWrapper\":\"Loader_loaderWrapper__6ypwD\",\"loaderIcon\":\"Loader_loaderIcon__GDw+3\",\"loader\":\"Loader_loader__+lRPl\"};","import css from \"./Loader.module.css\";\nimport { BiLoaderCircle } from \"react-icons/bi\";\n\nfunction Loader() {\n  return (\n    <div className={css.loaderWrapper}>\n      <BiLoaderCircle className={css.loaderIcon} />\n    </div>\n  );\n}\n\nexport default Loader;\n","import { useState } from \"react\";\n\nfunction useShowModal(option) {\n  const [showModal, setShowModal] = useState(option);\n  const toggleModal = () => setShowModal(prevState => !prevState);\n\n  return { toggleModal, showModal };\n}\n\nexport default useShowModal;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/contacts-operation';\nimport { getContacts } from 'redux/contacts/contacts-selectors';\nimport ContactList from 'components/ContactList/ContactList';\nimport ContactForm from 'components/ContactForm';\nimport AddContact from 'components/AddContact';\nimport Filter from 'components/Filter';\nimport Modal from 'components/Modal';\nimport Loader from 'components/Loader';\nimport useShowModal from 'hooks/useShowModal';\n\nconst Contact = () => {\n  const { showModal, toggleModal } = useShowModal(false);\n  const dispatch = useDispatch();\n  const { isLoading } = useSelector(getContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      {showModal && (\n        <Modal onClose={toggleModal}>\n          <ContactForm />\n        </Modal>\n      )}\n\n      <AddContact />\n      <div>\n        <Filter />\n        {isLoading ? <Loader /> : <ContactList />}\n      </div>\n    </div>\n  );\n};\n\nexport default Contact;\n","import Contact from 'components/Contact';\n\nconst ContactPage = () => {\n  return (\n    <div>\n      <Contact />\n    </div>\n  );\n};\n\nexport default ContactPage;\n","import * as yup from 'yup';\n\nexport const contactSchema = yup.object({\n  name: yup.string().required().min(3).max(30),\n  number: yup.number().required(),\n});\n\nexport const userLoginSchema = yup.object({\n  email: yup.string().required().email(),\n  password: yup.string().required().min(4).max(14),\n});\n\nexport const userRegisterSchema = yup.object({\n  name: yup.string().required().min(3).max(30),\n  email: yup.string().required().email(),\n  password: yup.string().required().min(7).max(14),\n});\n"],"names":["getFilter","state","filter","getContacts","contacts","items","useSelector","dispatch","useDispatch","filteredContactList","normalizedFilter","toLowerCase","contact","name","includes","number","filtredContacts","className","css","map","id","onClick","deleteContact","nanoid","length","ContactForm","onClose","handleSubmit","e","preventDefault","currentTarget","elements","value","some","Report","addContact","Notify","initialValues","onSubmit","validationSchema","contactSchema","values","handleChange","type","onChange","component","modalRoot","document","querySelector","Modal","children","useEffect","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","target","useState","showModal","setShowModal","toggleModal","prevShowModal","size","Filter","changeFilter","option","prevState","useShowModal","isLoading","fetchContacts","AddContact","yup","required","min","max","userLoginSchema","email","password","userRegisterSchema"],"sourceRoot":""}