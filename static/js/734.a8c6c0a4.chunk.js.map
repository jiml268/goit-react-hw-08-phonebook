{"version":3,"file":"static/js/734.a8c6c0a4.chunk.js","mappings":"sOACA,EAAwB,yBAAxB,EAAwD,wBAAxD,EAAwF,yBAAxF,EAAyH,yBAAzH,EAA2J,0BAA3J,EAA6L,yB,SC0E7L,EApEkB,WAChB,IAAMA,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfN,GACEO,EAAAA,EAAAA,IAAM,CACJC,MAAOH,EAAKI,SAASD,MAAME,MAC3BC,SAAUN,EAAKI,SAASE,SAASD,SAGrCL,EAAKO,OACN,EAED,OACE,4BACE,eAAIC,UAAWC,EAAf,oBAEA,SAAC,KAAD,CACEC,cAAe,CAAEP,MAAO,GAAIG,SAAU,IACtCK,SAAUd,EACVe,iBAAkBC,EAAAA,GAHpB,SAKG,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,aAAcC,EAAzB,EAAyBA,aAAzB,OACC,UAAC,KAAD,CAAMR,UAAWC,EAAUE,SAAUd,EAArC,WACE,mBAAOW,UAAWC,EAAlB,mBAEE,kBACED,UAAWC,EACXQ,KAAK,QACLZ,MAAOS,EAAOX,MACde,KAAK,QACLC,SAAUJ,KAEZ,SAAC,KAAD,CACEP,UAAWC,EACXS,KAAK,QACLE,UAAU,YAId,mBAAOZ,UAAWC,EAAlB,sBAEE,kBACED,UAAWC,EACXQ,KAAK,WACLZ,MAAOS,EAAOR,SACdY,KAAK,WACLC,SAAUJ,KAEZ,SAAC,KAAD,CACEP,UAAWC,EACXS,KAAK,WACLE,UAAU,YAId,mBAAQZ,UAAWC,EAAYQ,KAAK,SAApC,SACGD,EAAe,MAAQ,YAnC7B,MA0CR,EC/DD,EARkB,WAChB,OACE,0BACE,SAAC,EAAD,KAGL,C,sHCNYK,EAAgBC,EAAAA,GAAW,CACtCJ,KAAMI,EAAAA,KAAaC,WAAWC,IAAI,GAAGC,IAAI,IACzCC,OAAQJ,EAAAA,KAAaC,aAGVV,EAAkBS,EAAAA,GAAW,CACxCnB,MAAOmB,EAAAA,KAAaC,WAAWpB,QAC/BG,SAAUgB,EAAAA,KAAaC,WAAWC,IAAI,GAAGC,IAAI,MAGlCE,EAAqBL,EAAAA,GAAW,CAC3CJ,KAAMI,EAAAA,KAAaC,WAAWC,IAAI,GAAGC,IAAI,IACzCtB,MAAOmB,EAAAA,KAAaC,WAAWpB,QAC/BG,SAAUgB,EAAAA,KAAaC,WAAWC,IAAI,GAAGC,IAAI,K","sources":["webpack://goit-react-hw-08-phonebook/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.js","pages/LoginPage.js","utilits/validationSchema.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"LoginForm_title__5FilZ\",\"form\":\"LoginForm_form__gPEx5\",\"label\":\"LoginForm_label__F7sLE\",\"input\":\"LoginForm_input__aQRtt\",\"button\":\"LoginForm_button__LodJg\",\"error\":\"LoginForm_error__012y+\"};","import { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/auth-operations';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport { userLoginSchema } from 'utilits/validationSchema';\nimport PropTypes from 'prop-types';\nimport css from './LoginForm.module.css';\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      logIn({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      }),\n    );\n    form.reset();\n  };\n\n  return (\n    <div>\n      <h2 className={css.title}>Login</h2>\n\n      <Formik\n        initialValues={{ email: '', password: '' }}\n        onSubmit={handleSubmit}\n        validationSchema={userLoginSchema}\n      >\n        {({ values, handleChange, isSubmitting }) => (\n          <Form className={css.form} onSubmit={handleSubmit}>\n            <label className={css.label}>\n              Email\n              <input\n                className={css.input}\n                type=\"email\"\n                value={values.email}\n                name=\"email\"\n                onChange={handleChange}\n              />\n              <ErrorMessage\n                className={css.error}\n                name=\"email\"\n                component=\"div\"\n              />\n            </label>\n\n            <label className={css.label}>\n              Password\n              <input\n                className={css.input}\n                type=\"password\"\n                value={values.password}\n                name=\"password\"\n                onChange={handleChange}\n              />\n              <ErrorMessage\n                className={css.error}\n                name=\"password\"\n                component=\"div\"\n              />\n            </label>\n\n            <button className={css.button} type=\"submit\">\n              {isSubmitting ? '...' : 'Login'}\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default LoginForm;\n\nLoginForm.propTypes = {\n  validationSchema: PropTypes.shape({\n    name: PropTypes.func,\n    number: PropTypes.func,\n    email: PropTypes.func,\n  }),\n};\n","import LoginForm from \"components/LoginForm\";\n\nconst LoginPage = () => {\n  return (\n    <div>\n      <LoginForm />\n    </div>\n  );\n};\n\nexport default LoginPage;\n","import * as yup from 'yup';\n\nexport const contactSchema = yup.object({\n  name: yup.string().required().min(3).max(30),\n  number: yup.number().required(),\n});\n\nexport const userLoginSchema = yup.object({\n  email: yup.string().required().email(),\n  password: yup.string().required().min(4).max(14),\n});\n\nexport const userRegisterSchema = yup.object({\n  name: yup.string().required().min(3).max(30),\n  email: yup.string().required().email(),\n  password: yup.string().required().min(7).max(14),\n});\n"],"names":["dispatch","useDispatch","handleSubmit","e","preventDefault","form","currentTarget","logIn","email","elements","value","password","reset","className","css","initialValues","onSubmit","validationSchema","userLoginSchema","values","handleChange","isSubmitting","type","name","onChange","component","contactSchema","yup","required","min","max","number","userRegisterSchema"],"sourceRoot":""}